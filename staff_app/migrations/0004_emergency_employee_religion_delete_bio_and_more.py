# Generated by Django 4.1.5 on 2023-01-10 08:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('staff_app', '0003_leavereport'),
    ]

    operations = [
        migrations.CreateModel(
            name='Emergency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(help_text='who should we contact ?', max_length=255, null=True, verbose_name='Fullname')),
                ('tel', phonenumber_field.modelfields.PhoneNumberField(default='+233240000000', help_text='Enter number with Country Code Eg. +233240000000', max_length=128, region=None, verbose_name='Phone Number (Example +233240000000)')),
                ('location', models.CharField(max_length=125, null=True, verbose_name='Place of Residence')),
                ('relationship', models.CharField(choices=[('Father', 'Father'), ('Mother', 'Mother'), ('Sister', 'Sister'), ('Brother', 'Brother'), ('Uncle', 'Uncle'), ('Aunty', 'Aunty'), ('Husband', 'Husband'), ('Wife', 'Wife'), ('Fiance', 'Fiance'), ('Cousin', 'Cousin'), ('Fiancee', 'Fiancee'), ('Niece', 'Niece'), ('Nephew', 'Nephew'), ('Son', 'Son'), ('Daughter', 'Daughter')], default='Father', help_text='Who is this person to you ?', max_length=8, null=True, verbose_name='Relationship with Person')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated')),
            ],
            options={
                'verbose_name': 'Emergency',
                'verbose_name_plural': 'Emergency',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(choices=[('Mr', 'Mr'), ('Mrs', 'Mrs'), ('Mss', 'Mss'), ('Dr', 'Dr'), ('Sir', 'Sir'), ('Madam', 'Madam')], default='Mr', max_length=10, null=True, verbose_name='Title')),
                ('image', models.FileField(blank=True, default='default.png', help_text='upload image size less than 2.0MB', null=True, upload_to='profiles', verbose_name='Profile Image')),
                ('firstname', models.CharField(max_length=125, verbose_name='Firstname')),
                ('lastname', models.CharField(max_length=125, verbose_name='Lastname')),
                ('othername', models.CharField(blank=True, max_length=125, null=True, verbose_name='Othername (optional)')),
                ('sex', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other'), ('Not Known', 'Not Known')], default='male', max_length=10, verbose_name='Gender')),
                ('email', models.EmailField(blank=True, default=None, max_length=255, null=True, verbose_name='Email')),
                ('tel', phonenumber_field.modelfields.PhoneNumberField(default='+233240000000', help_text='Enter number with Country Code Eg. +233240000000', max_length=128, region=None, verbose_name='Phone Number (Example +233240000000)')),
                ('bio', models.CharField(blank=True, default='', help_text='your biography,tell me something about yourself eg. i love working ...', max_length=255, null=True, verbose_name='Bio')),
                ('birthday', models.DateField(verbose_name='Birthday')),
                ('ssnitnumber', models.CharField(blank=True, max_length=30, null=True, verbose_name='SSNIT Number')),
                ('tinnumber', models.CharField(blank=True, max_length=15, null=True, verbose_name='TIN')),
                ('is_blocked', models.BooleanField(default=False, help_text='button to toggle employee block and unblock', verbose_name='Is Blocked')),
                ('is_deleted', models.BooleanField(default=False, help_text='button to toggle employee deleted and undelete', verbose_name='Is Deleted')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated')),
            ],
            options={
                'verbose_name': 'Employee',
                'verbose_name_plural': 'Employees',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Religion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=125)),
                ('description', models.CharField(blank=True, max_length=125, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
            ],
            options={
                'verbose_name': 'Religion',
                'verbose_name_plural': 'Religions',
                'ordering': ['name', 'created'],
            },
        ),
        migrations.DeleteModel(
            name='Bio',
        ),
        migrations.AddField(
            model_name='employee',
            name='religion',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='staff_app.religion', verbose_name='Religion'),
        ),
        migrations.AddField(
            model_name='employee',
            name='user',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='emergency',
            name='employee',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='staff_app.employee'),
        ),
    ]
